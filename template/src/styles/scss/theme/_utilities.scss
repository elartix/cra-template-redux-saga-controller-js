@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/utilities";

$utilities: map-merge(
  $utilities,
  (
    "opacity": map-merge(
      map-get($utilities, "opacity"),
      (
        values: (
          0: 0,
          5: .05,
          10: .1,
          15: .15,
          20: .2,
          25: .25,
          30: .30,
          35: .35,
          40: .4,
          45: .45,
          50: .5,
          55: .55,
          60: .6,
          65: .65,
          70: .7,
          75: .75,
          80: .8,
          85: .85,
          90: .9,
          95: .95,
          100: 1,
        ),
      ),
    ),
    "text-opacity": (
      css-var: true,
      class: text-opacity,
      values: (
        0: 0,
        5: .05,
        10: .1,
        15: .15,
        20: .2,
        25: .25,
        30: .30,
        35: .35,
        40: .4,
        45: .45,
        50: .5,
        55: .55,
        60: .6,
        65: .65,
        70: .7,
        75: .75,
        80: .8,
        85: .85,
        90: .9,
        95: .95,
        100: 1,
      )
    ),
    "overflow-x": (
      property: overflow-x,
      values: auto hidden visible scroll,
    ),
    "overflow-y": (
      property: overflow-y,
      values: auto hidden visible scroll,
    ),
    "position": (
      property: position,
      values: static relative absolute fixed sticky
    ),
    "top": (
      property: top,
      values: $position-values
    ),
    "bottom": (
      property: bottom,
      values: $position-values
    ),
    "start": (
      property: left,
      class: start,
      values: $position-values
    ),
    "end": (
      property: right,
      class: end,
      values: $position-values
    ),
    "padding-right": (
      responsive: true,
      property: padding-right,
      class: pr,
      values: $spacers
    ),
    "padding-left": (
      responsive: true,
      property: padding-left,
      class: pl,
      values: $spacers
    ),
    "white-space": (
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap,
        pre-wrap: pre-wrap,
      )
    ),
    "font-weight": (
      property: font-weight,
      class: fw,
      values: (
        light: $font-weight-light,
        lighter: $font-weight-lighter,
        normal: $font-weight-normal,
        medium: $font-weight-medium,
        semibold: $font-weight-semibold,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder
      )
    ),
    "rounded": (
      property: border-radius,
      class: rounded,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-top": (
      property: border-top-left-radius border-top-right-radius,
      class: rounded-top,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-end": (
      property: border-top-right-radius border-bottom-right-radius,
      class: rounded-end,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-bottom": (
      property: border-bottom-right-radius border-bottom-left-radius,
      class: rounded-bottom,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "rounded-start": (
      property: border-bottom-left-radius border-top-left-radius,
      class: rounded-start,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-2xl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill)
      )
    ),
    "viewport-height-modified": (
      property: height,
      class: vhm,
      values: (
        50: calc(var(--vh, 1vh) * 50),
        100: calc(var(--vh, 1vh) * 100)
      )
    ),
    "viewport-min-height-modified": (
      property: min-height,
      class: vminhm,
      values: (
        50: calc(var(--vh, 1vh) * 50),
        100: calc(var(--vh, 1vh) * 100)
      )
    ),
    "shadow": (
      property: box-shadow,
      class: shadow,
      values: (
        null: $box-shadow,
        sm: $box-shadow-sm,
        lg: $box-shadow-lg,
        none: none
      )
    ),
    "border-style": (
      property: border-style,
      class: border-style,
      values: (
        none: none,
        hidden: hidden,
        dotted: dotted,
        dashed: dashed,
        solid: solid,
        double: double,
        groove: groove,
        ridge: ridge,
        inset: inset,
        outset: outset,
        inherit: inherit,
        initial: initial,
        revert: revert,
        unset: unset,
      )
    ),
    "object-fit": (
      property: object-fit,
      class: object-fit,
      values: (
        none: none,
        fill: fill,
        cover: cover,
        contain: contain,
        scale-down: scale-down
      )
    ),
    "link-text-color": (
      property: color,
      class: link-text,
      local-vars: (
        "text-opacity": 1
      ),
      state: hover,
      values: map-merge(
        $utilities-text-colors,
        (
          "muted": $text-muted,
          "black-50": rgba($black, .5), // deprecated
          "white-50": rgba($white, .5), // deprecated
          "reset": inherit,
        )
      )
    ),
    "font-family": map-merge(
      map-get($utilities, "font-family"),
      (
        values: map-merge(
          map-get(map-get($utilities, "font-family"), "values"),
          (alternative: var(--#{$variable-prefix}font-alternative))
        )
      ),
    ),
    "zindexes": (
      property: z-index,
      class: zis,
      values: $zindex-values
    ),
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
        'lh-20': $line-height-sm
      )
    ),
  )
);
